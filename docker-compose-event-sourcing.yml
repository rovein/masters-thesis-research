version: '3'
services:
  order-service-event-sourcing:
    build:
      context: ./order-service-event-sourcing/
      args:
        jarDir: ${JAR_DIR:-target}
        serviceImageVersion: 0.1.0-SNAPSHOT
        baseImageVersion: BUILD-15
    image: saga-research/order-service-event-sourcing:${DOCKER_IMAGE_TAG:-latest}
    ports:
      - "8181:8181"
      - "5105:5105"
      - "8101:8101"
    volumes:
      - ./logs/order-service.log:/logs/order-service.log
    depends_on:
      - mysql-event-sourcing
      - kafka-event-sourcing
      - zookeeper-event-sourcing
      - cdc-service-event-sourcing
    restart: always
    environment:
      TZ: Europe/Kiev
      JAVA_TOOL_OPTIONS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5105
        -Dcom.sun.management.jmxremote
        -Djava.rmi.server.hostname=localhost
        -Dcom.sun.management.jmxremote.port=8101
        -Dcom.sun.management.jmxremote.rmi.port=8101
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=localhost
        -XX:+HeapDumpOnOutOfMemoryError
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-event-sourcing/eventuate
      SPRING_DATASOURCE_USERNAME: mysqluser
      SPRING_DATASOURCE_PASSWORD: mysqlpw
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka-event-sourcing:29192
      CDC_SERVICE_URL: http://cdc-service-event-sourcing:8080
      SPRING_SLEUTH_ENABLED: "true"
      SPRING_SLEUTH_SAMPLER_PROBABILITY: 1
      SPRING_ZIPKIN_BASE_URL: http://zipkin:9411/

  basket-service-event-sourcing:
    build:
      context: ./basket-service-event-sourcing/
      args:
        jarDir: ${JAR_DIR:-target}
        serviceImageVersion: 0.1.0-SNAPSHOT
        baseImageVersion: BUILD-15
    image: saga-research/basket-service-event-sourcing:${DOCKER_IMAGE_TAG:-latest}
    ports:
      - "8182:8182"
      - "5106:5106"
      - "8102:8102"
    volumes:
      - ./logs/basket-service.log:/logs/basket-service.log
    depends_on:
      - mysql-event-sourcing
      - kafka-event-sourcing
      - zookeeper-event-sourcing
      - cdc-service-event-sourcing
    restart: always
    environment:
      TZ: Europe/Kiev
      JAVA_TOOL_OPTIONS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5106
        -Dcom.sun.management.jmxremote
        -Djava.rmi.server.hostname=localhost
        -Dcom.sun.management.jmxremote.port=8102
        -Dcom.sun.management.jmxremote.rmi.port=8102
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=localhost
        -XX:+HeapDumpOnOutOfMemoryError
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-event-sourcing/eventuate
      SPRING_DATASOURCE_USERNAME: mysqluser
      SPRING_DATASOURCE_PASSWORD: mysqlpw
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka-event-sourcing:29192
      CDC_SERVICE_URL: http://cdc-service-event-sourcing:8080
      SPRING_SLEUTH_ENABLED: "true"
      SPRING_SLEUTH_SAMPLER_PROBABILITY: 1
      SPRING_ZIPKIN_BASE_URL: http://zipkin:9411/

  product-service-event-sourcing:
    build:
      context: ./product-service-event-sourcing/
      args:
        jarDir: ${JAR_DIR:-target}
        serviceImageVersion: 0.1.0-SNAPSHOT
        baseImageVersion: BUILD-15
    image: saga-research/product-service-event-sourcing:${DOCKER_IMAGE_TAG:-latest}
    ports:
      - "8183:8183"
      - "5107:5107"
      - "8103:8103"
    volumes:
      - ./logs/product-service.log:/logs/product-service.log
    depends_on:
      - mysql-event-sourcing
      - kafka-event-sourcing
      - zookeeper-event-sourcing
      - cdc-service-event-sourcing
    restart: always
    environment:
      TZ: Europe/Kiev
      JAVA_TOOL_OPTIONS: >
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5107
        -Dcom.sun.management.jmxremote
        -Djava.rmi.server.hostname=localhost
        -Dcom.sun.management.jmxremote.port=8103
        -Dcom.sun.management.jmxremote.rmi.port=8103
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=localhost
        -XX:+HeapDumpOnOutOfMemoryError
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-event-sourcing/eventuate
      SPRING_DATASOURCE_USERNAME: mysqluser
      SPRING_DATASOURCE_PASSWORD: mysqlpw
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka-event-sourcing:29192
      CDC_SERVICE_URL: http://cdc-service-event-sourcing:8080
      SPRING_SLEUTH_ENABLED: "true"
      SPRING_SLEUTH_SAMPLER_PROBABILITY: 1
      SPRING_ZIPKIN_BASE_URL: http://zipkin:9411/

  zookeeper-event-sourcing:
    image: "eventuateio/eventuate-zookeeper:0.18.0.RELEASE"
    ports:
      - 2281:2181
    environment:
      EVENTUATE_COMMON_VERSION: 0.18.0.RELEASE
      ZOOKEEPER_CLIENT_PORT: 2281
      KAFKA_HEAP_OPTS: -Xmx64m

  kafka-event-sourcing:
    image: "eventuateio/eventuate-kafka:0.18.0.RELEASE"
    ports:
      - 9192:9192
      - 29192:29192
    depends_on:
      - zookeeper-event-sourcing
    environment:
      KAFKA_LISTENERS: LC://kafka-event-sourcing:29192,LX://kafka-event-sourcing:9192
      KAFKA_ADVERTISED_LISTENERS: LC://kafka-event-sourcing:29192,LX://${DOCKER_HOST_IP:-localhost}:9192
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LC:PLAINTEXT,LX:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LC
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-event-sourcing:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx192m

  mysql-event-sourcing:
    image: eventuateio/eventuate-mysql8:0.18.0.RELEASE
    ports:
      - 3316:3306
    volumes:
      - ./data/database-event-sourcing:/var/lib/mysql
    environment:
      - EVENTUATE_COMMON_VERSION=0.18.0.RELEASE
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw

  cdc-service-event-sourcing:
    image: eventuateio/eventuate-cdc-service:0.16.0.RELEASE
    ports:
      - "8199:8080"
    depends_on:
      - mysql-event-sourcing
      - kafka-event-sourcing
      - zookeeper-event-sourcing
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-event-sourcing/eventuate
      SPRING_DATASOURCE_USERNAME: mysqluser
      SPRING_DATASOURCE_PASSWORD: mysqlpw
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka-event-sourcing:29192
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper-event-sourcing:2181
      EVENTUATELOCAL_CDC_DB_USER_NAME: root
      EVENTUATELOCAL_CDC_DB_PASSWORD: rootpassword
      EVENTUATELOCAL_CDC_READER_NAME: MySqlReader
      EVENTUATELOCAL_CDC_MYSQL_BINLOG_CLIENT_UNIQUE_ID: 1234567890
      EVENTUATELOCAL_CDC_READ_OLD_DEBEZIUM_DB_OFFSET_STORAGE_TOPIC: "false"
      EVENTUATE_CDC_KAFKA_ENABLE_BATCH_PROCESSING: ${EVENTUATE_CDC_KAFKA_ENABLE_BATCH_PROCESSING:-false}
      EVENTUATE_OUTBOX_ID: 1
      EVENTUATE_CDC_TYPE: "EventuateLocal"
      JAVA_OPTS: -Xmx64m

  zipkin:
    image: openzipkin/zipkin:2.23
    ports:
      - "9411:9411"
    environment:
      JAVA_OPTS: -Xmx64m

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk-network
    environment:
      - TZ=Europe/Kiev
      - discovery.type=single-node
      - xpack.security.enabled=false

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.13
    ports:
      - "5000:5000"
    volumes:
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./:/usr/share/logstash/config
      - ./logs:/usr/share/logstash/logs
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    command: [ "-f", "/usr/share/logstash/config/logstash.conf" ]
    depends_on:
      - elasticsearch
    networks:
      - elk-network
    environment:
      TZ: Europe/Kiev

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.13
    ports:
      - "5601:5601"
    depends_on:
      - logstash
    networks:
      - elk-network
    environment:
      TZ: Europe/Kiev

networks:
  elk-network:
    driver: bridge
